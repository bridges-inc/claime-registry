{
  "address": "0x7Cac4b4a233849b301b4b651666C3f8cCcb834e2",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "propertyType",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "propertyId",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "method",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "evidence",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct IClaimRegistry.Claim",
          "name": "claim",
          "type": "tuple"
        }
      ],
      "name": "ClaimRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "propertyType",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "propertyId",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "method",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "evidence",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct IClaimRegistry.Claim",
          "name": "claim",
          "type": "tuple"
        }
      ],
      "name": "ClaimUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allClaimKeys",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allClaims",
      "outputs": [
        {
          "internalType": "string",
          "name": "propertyType",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "method",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "evidence",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "listClaims",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "propertyType",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "method",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "evidence",
          "type": "string"
        }
      ],
      "name": "register",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "propertyType",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "method",
          "type": "string"
        }
      ],
      "name": "remove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x3c99b13921b76b03e1160b4f882e41fc3940f3c562a23d307016f84034d1b63b",
  "receipt": {
    "to": null,
    "from": "0x81A2863ED122811A1197dB2D9b90a720d73ac81c",
    "contractAddress": "0x7Cac4b4a233849b301b4b651666C3f8cCcb834e2",
    "transactionIndex": 36,
    "gasUsed": "1096089",
    "logsBloom": "0x
    "blockHash": "0xc5e4ed793dde0c45ddccbffaef98b3951b38e9594d3d2c68fed2e9cb7707e3cb",
    "transactionHash": "0x3c99b13921b76b03e1160b4f882e41fc3940f3c562a23d307016f84034d1b63b",
    "logs": [
      {
        "transactionIndex": 36,
        "blockNumber": 22196591,
        "transactionHash": "0x3c99b13921b76b03e1160b4f882e41fc3940f3c562a23d307016f84034d1b63b",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x00000000000000000000000081a2863ed122811a1197db2d9b90a720d73ac81c",
          "0x0000000000000000000000007b5000af8ab69fd59eb0d4f5762bff57c9c04385"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000c2b45b5e5c54000000000000000000000000000000000000000000000000000de0b6b3a764000000000000000000000000000000000000000000000000a87534576e48e190939e0000000000000000000000000000000000000000000000000d1e02584907ac0000000000000000000000000000000000000000000000a875351a22a43fece79e",
        "logIndex": 220,
        "blockHash": "0xc5e4ed793dde0c45ddccbffaef98b3951b38e9594d3d2c68fed2e9cb7707e3cb"
      }
    ],
    "blockNumber": 22196591,
    "cumulativeGasUsed": "7419855",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "159ed7f53b815554638ce6eea6213a44",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"propertyType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"evidence\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct IClaimRegistry.Claim\",\"name\":\"claim\",\"type\":\"tuple\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"propertyType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"evidence\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct IClaimRegistry.Claim\",\"name\":\"claim\",\"type\":\"tuple\"}],\"name\":\"ClaimUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allClaimKeys\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allClaims\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"propertyType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"evidence\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"listClaims\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"propertyType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"evidence\",\"type\":\"string\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"propertyType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"}],\"name\":\"remove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"listClaims(address)\":{\"details\":\"List keys of claims\",\"params\":{\"account\":\"account of claimer\"},\"returns\":{\"_0\":\"[[claimKeys]]\"}},\"register(string,string,string,string)\":{\"details\":\"Register a claim of ownership of property with evidence.\",\"params\":{\"evidence\":\"evidence of ownership\",\"method\":\"method of ownership verification\",\"propertyId\":\"ID of property\",\"propertyType\":\"type of property\"}},\"remove(string,string,string)\":{\"details\":\"Remove a claim of ownership.\",\"params\":{\"method\":\"method of ownership verification\",\"propertyId\":\"ID of property\",\"propertyType\":\"type of property\"}}},\"stateVariables\":{\"allClaimKeys\":{\"details\":\"Maps address with the claimKeys.\"},\"allClaims\":{\"details\":\"Maps claimKey<uint256: hash of address, propertyType, propertyId, method> with the claim.\"}},\"title\":\"ClaimeRegistry store claims of ownership\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ClaimRegistry.sol\":\"ClaimRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/ClaimRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"./interfaces/IClaimRegistry.sol\\\";\\n\\n/// @title ClaimeRegistry store claims of ownership\\ncontract ClaimRegistry is IClaimRegistry {\\n\\t/// @dev Maps address with the claimKeys.\\n\\tmapping(address => uint256[]) public allClaimKeys;\\n\\n\\t/// @dev Maps claimKey<uint256: hash of address, propertyType, propertyId, method> with the claim.\\n\\tmapping(uint256 => Claim) public allClaims;\\n\\n\\t/// @inheritdoc IClaimRegistry\\n\\tfunction register(\\n\\t\\tstring memory propertyType,\\n\\t\\tstring memory propertyId,\\n\\t\\tstring memory method,\\n\\t\\tstring memory evidence\\n\\t) external override {\\n\\t\\trequire(!_isEmptyStr(propertyType), \\\"CLM001\\\");\\n\\t\\trequire(!_isEmptyStr(propertyId), \\\"CLM002\\\");\\n\\t\\tuint256 claimKey = _toClaimKey(\\n\\t\\t\\tmsg.sender,\\n\\t\\t\\tpropertyType,\\n\\t\\t\\tpropertyId,\\n\\t\\t\\tmethod\\n\\t\\t);\\n\\t\\tbool isNew = _isEmptyStr(allClaims[claimKey].propertyType);\\n\\t\\tallClaims[claimKey].propertyType = propertyType;\\n\\t\\tallClaims[claimKey].propertyId = propertyId;\\n\\t\\tallClaims[claimKey].method = method;\\n\\t\\tallClaims[claimKey].evidence = evidence;\\n\\t\\tif (isNew) {\\n\\t\\t\\tallClaimKeys[msg.sender].push(claimKey);\\n\\t\\t}\\n\\t\\temit ClaimUpdated(msg.sender, allClaims[claimKey]);\\n\\t}\\n\\n\\t/// @inheritdoc IClaimRegistry\\n\\tfunction remove(\\n\\t\\tstring memory propertyType,\\n\\t\\tstring memory propertyId,\\n\\t\\tstring memory method\\n\\t) external override {\\n\\t\\trequire(!_isEmptyStr(propertyType), \\\"CLM001\\\");\\n\\t\\trequire(!_isEmptyStr(propertyId), \\\"CLM002\\\");\\n\\t\\tuint256 claimKey = _toClaimKey(\\n\\t\\t\\tmsg.sender,\\n\\t\\t\\tpropertyType,\\n\\t\\t\\tpropertyId,\\n\\t\\t\\tmethod\\n\\t\\t);\\n\\t\\tuint256 keysLength = allClaimKeys[msg.sender].length;\\n\\t\\tuint256 index = keysLength;\\n\\t\\tfor (uint256 i = 0; i < keysLength; i++) {\\n\\t\\t\\tif (allClaimKeys[msg.sender][i] == claimKey) {\\n\\t\\t\\t\\tindex = i;\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tif (index < keysLength) {\\n\\t\\t\\tClaim memory claim = allClaims[claimKey];\\n\\t\\t\\tdelete allClaims[claimKey];\\n\\t\\t\\tallClaimKeys[msg.sender][index] = allClaimKeys[msg.sender][\\n\\t\\t\\t\\tkeysLength - 1\\n\\t\\t\\t];\\n\\t\\t\\tallClaimKeys[msg.sender].pop();\\n\\t\\t\\temit ClaimRemoved(msg.sender, claim);\\n\\t\\t}\\n\\t}\\n\\n\\t/// @inheritdoc IClaimRegistry\\n\\tfunction listClaims(address account)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\toverride\\n\\t\\treturns (uint256[] memory)\\n\\t{\\n\\t\\treturn allClaimKeys[account];\\n\\t}\\n\\n\\tfunction _equalsStr(string memory a, string memory b)\\n\\t\\tinternal\\n\\t\\tpure\\n\\t\\treturns (bool)\\n\\t{\\n\\t\\tif (bytes(a).length != bytes(b).length) {\\n\\t\\t\\treturn false;\\n\\t\\t} else {\\n\\t\\t\\treturn keccak256(abi.encodePacked(a)) == keccak256(abi.encodePacked(b));\\n\\t\\t}\\n\\t}\\n\\n\\tfunction _isEmptyStr(string memory a) internal pure returns (bool) {\\n\\t\\treturn _equalsStr(a, \\\"\\\");\\n\\t}\\n\\n\\tfunction _toClaimKey(\\n\\t\\taddress account,\\n\\t\\tstring memory propertyType,\\n\\t\\tstring memory propertyId,\\n\\t\\tstring memory method\\n\\t) internal pure returns (uint256) {\\n\\t\\treturn\\n\\t\\t\\tuint256(\\n\\t\\t\\t\\tkeccak256(abi.encodePacked(account, propertyType, propertyId, method))\\n\\t\\t\\t);\\n\\t}\\n}\\n\",\"keccak256\":\"0x9418ac5072baae5446bf62892fa1f5f14589d592c056decec6bdc2e1aa869dac\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IClaimRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\n/// @title IClaimeRegistry store claims of ownership.\\ninterface IClaimRegistry {\\n\\t/// @dev Claim of Ownership\\n\\tstruct Claim {\\n\\t\\tstring propertyType;\\n\\t\\tstring propertyId;\\n\\t\\tstring method;\\n\\t\\tstring evidence;\\n\\t}\\n\\n\\t/// @dev Emit on a claim created/updated\\n\\tevent ClaimUpdated(address claimer, Claim claim);\\n\\n\\t/// @dev Emit on a claim removed\\n\\tevent ClaimRemoved(address claimer, Claim claim);\\n\\n\\t/// @dev Register a claim of ownership of property with evidence.\\n\\t/// @param propertyType type of property\\n\\t/// @param propertyId ID of property\\n\\t/// @param method method of ownership verification\\n\\t/// @param evidence evidence of ownership\\n\\tfunction register(\\n\\t\\tstring memory propertyType,\\n\\t\\tstring memory propertyId,\\n\\t\\tstring memory method,\\n\\t\\tstring memory evidence\\n\\t) external;\\n\\n\\t/// @dev Remove a claim of ownership.\\n\\t/// @param propertyType type of property\\n\\t/// @param propertyId ID of property\\n\\t/// @param method method of ownership verification\\n\\tfunction remove(\\n\\t\\tstring memory propertyType,\\n\\t\\tstring memory propertyId,\\n\\t\\tstring memory method\\n\\t) external;\\n\\n\\t/// @dev List keys of claims\\n\\t/// @param account account of claimer\\n\\t/// @return [[claimKeys]]\\n\\tfunction listClaims(address account) external view returns (uint256[] memory);\\n}\\n\",\"keccak256\":\"0x6785686db23c880e88a0a1d0ce345607be73dfb08a91a936006f95d3bb4f4f9a\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506112df806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80631a8598a7116100505780631a8598a7146100aa578063c3552867146100cd578063da40fa77146100ee57600080fd5b806305562ae81461006c5780630e24c52c14610095575b600080fd5b61007f61007a366004610c7d565b610101565b60405161008c9190610c9f565b60405180910390f35b6100a86100a3366004610d86565b610178565b005b6100bd6100b8366004610e33565b6103bd565b60405161008c9493929190610ea8565b6100e06100db366004610f00565b610605565b60405190815260200161008c565b6100a86100fc366004610f2a565b610636565b73ffffffffffffffffffffffffffffffffffffffff81166000908152602081815260409182902080548351818402810184019094528084526060939283018282801561016c57602002820191906000526020600020905b815481526020019060010190808311610158575b50505050509050919050565b61018184610ab9565b156101bc5760405162461bcd60e51b8152602060048201526006602482015265434c4d30303160d01b60448201526064015b60405180910390fd5b6101c583610ab9565b156101fb5760405162461bcd60e51b815260206004820152600660248201526521a62698181960d11b60448201526064016101b3565b600061020933868686610ada565b6000818152600160205260408120805492935090916102af919061022c90610fb2565b80601f016020809104026020016040519081016040528092919081815260200182805461025890610fb2565b80156102a55780601f1061027a576101008083540402835291602001916102a5565b820191906000526020600020905b81548152906001019060200180831161028857829003601f168201915b5050505050610ab9565b600083815260016020908152604090912088519293506102d3929091890190610b7e565b50600082815260016020818152604090922087516102f993919092019190880190610b7e565b506000828152600160209081526040909120855161031f92600290920191870190610b7e565b506000828152600160209081526040909120845161034592600390920191860190610b7e565b50801561036d5733600090815260208181526040822080546001810182559083529120018290555b6000828152600160205260409081902090517f38913474ea29a22c6b686bcd567285304ab34843603996723b03f0c05e9355fc916103ad9133919061108d565b60405180910390a1505050505050565b6001602052600090815260409020805481906103d890610fb2565b80601f016020809104026020016040519081016040528092919081815260200182805461040490610fb2565b80156104515780601f1061042657610100808354040283529160200191610451565b820191906000526020600020905b81548152906001019060200180831161043457829003601f168201915b50505050509080600101805461046690610fb2565b80601f016020809104026020016040519081016040528092919081815260200182805461049290610fb2565b80156104df5780601f106104b4576101008083540402835291602001916104df565b820191906000526020600020905b8154815290600101906020018083116104c257829003601f168201915b5050505050908060020180546104f490610fb2565b80601f016020809104026020016040519081016040528092919081815260200182805461052090610fb2565b801561056d5780601f106105425761010080835404028352916020019161056d565b820191906000526020600020905b81548152906001019060200180831161055057829003601f168201915b50505050509080600301805461058290610fb2565b80601f01602080910402602001604051908101604052809291908181526020018280546105ae90610fb2565b80156105fb5780601f106105d0576101008083540402835291602001916105fb565b820191906000526020600020905b8154815290600101906020018083116105de57829003601f168201915b5050505050905084565b6000602052816000526040600020818154811061062157600080fd5b90600052602060002001600091509150505481565b61063f83610ab9565b156106755760405162461bcd60e51b8152602060048201526006602482015265434c4d30303160d01b60448201526064016101b3565b61067e82610ab9565b156106b45760405162461bcd60e51b815260206004820152600660248201526521a62698181960d11b60448201526064016101b3565b60006106c233858585610ada565b3360009081526020819052604081205491925081905b8281101561072f5733600090815260208190526040902080548591908390811061070457610704611119565b9060005260206000200154141561071d5780915061072f565b8061072781611145565b9150506106d8565b5081811015610ab15760008381526001602052604080822081516080810190925280548290829061075f90610fb2565b80601f016020809104026020016040519081016040528092919081815260200182805461078b90610fb2565b80156107d85780601f106107ad576101008083540402835291602001916107d8565b820191906000526020600020905b8154815290600101906020018083116107bb57829003601f168201915b505050505081526020016001820180546107f190610fb2565b80601f016020809104026020016040519081016040528092919081815260200182805461081d90610fb2565b801561086a5780601f1061083f5761010080835404028352916020019161086a565b820191906000526020600020905b81548152906001019060200180831161084d57829003601f168201915b5050505050815260200160028201805461088390610fb2565b80601f01602080910402602001604051908101604052809291908181526020018280546108af90610fb2565b80156108fc5780601f106108d1576101008083540402835291602001916108fc565b820191906000526020600020905b8154815290600101906020018083116108df57829003601f168201915b5050505050815260200160038201805461091590610fb2565b80601f016020809104026020016040519081016040528092919081815260200182805461094190610fb2565b801561098e5780601f106109635761010080835404028352916020019161098e565b820191906000526020600020905b81548152906001019060200180831161097157829003601f168201915b5050509190925250505060008581526001602052604081209192506109b38282610c02565b6109c1600183016000610c02565b6109cf600283016000610c02565b6109dd600383016000610c02565b50503360009081526020819052604090206109f9600185611160565b81548110610a0957610a09611119565b6000918252602080832090910154338352908290526040909120805484908110610a3557610a35611119565b60009182526020808320909101929092553381529081905260409020805480610a6057610a60611177565b600190038181906000526020600020016000905590557f288f7cec6535cec42094ddba6c823fe9dc1507b8b280861eebdf01dcbecdbba23382604051610aa792919061118d565b60405180910390a1505b505050505050565b6000610ad48260405180602001604052806000815250610b14565b92915050565b600084848484604051602001610af39493929190611228565b60408051601f19818403018152919052805160209091012095945050505050565b60008151835114610b2757506000610ad4565b81604051602001610b38919061128d565b6040516020818303038152906040528051906020012083604051602001610b5f919061128d565b6040516020818303038152906040528051906020012014905092915050565b828054610b8a90610fb2565b90600052602060002090601f016020900481019282610bac5760008555610bf2565b82601f10610bc557805160ff1916838001178555610bf2565b82800160010185558215610bf2579182015b82811115610bf2578251825591602001919060010190610bd7565b50610bfe929150610c3f565b5090565b508054610c0e90610fb2565b6000825580601f10610c1e575050565b601f016020900490600052602060002090810190610c3c9190610c3f565b50565b5b80821115610bfe5760008155600101610c40565b803573ffffffffffffffffffffffffffffffffffffffff81168114610c7857600080fd5b919050565b600060208284031215610c8f57600080fd5b610c9882610c54565b9392505050565b6020808252825182820181905260009190848201906040850190845b81811015610cd757835183529284019291840191600101610cbb565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610d0a57600080fd5b813567ffffffffffffffff80821115610d2557610d25610ce3565b604051601f8301601f19908116603f01168101908282118183101715610d4d57610d4d610ce3565b81604052838152866020858801011115610d6657600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060808587031215610d9c57600080fd5b843567ffffffffffffffff80821115610db457600080fd5b610dc088838901610cf9565b95506020870135915080821115610dd657600080fd5b610de288838901610cf9565b94506040870135915080821115610df857600080fd5b610e0488838901610cf9565b93506060870135915080821115610e1a57600080fd5b50610e2787828801610cf9565b91505092959194509250565b600060208284031215610e4557600080fd5b5035919050565b60005b83811015610e67578181015183820152602001610e4f565b83811115610e76576000848401525b50505050565b60008151808452610e94816020860160208601610e4c565b601f01601f19169290920160200192915050565b608081526000610ebb6080830187610e7c565b8281036020840152610ecd8187610e7c565b90508281036040840152610ee18186610e7c565b90508281036060840152610ef58185610e7c565b979650505050505050565b60008060408385031215610f1357600080fd5b610f1c83610c54565b946020939093013593505050565b600080600060608486031215610f3f57600080fd5b833567ffffffffffffffff80821115610f5757600080fd5b610f6387838801610cf9565b94506020860135915080821115610f7957600080fd5b610f8587838801610cf9565b93506040860135915080821115610f9b57600080fd5b50610fa886828701610cf9565b9150509250925092565b600181811c90821680610fc657607f821691505b60208210811415610fe757634e487b7160e01b600052602260045260246000fd5b50919050565b8054600090600181811c908083168061100757607f831692505b602080841082141561102957634e487b7160e01b600052602260045260246000fd5b83885260208801828015611044576001811461105557611080565b60ff19871682528282019750611080565b60008981526020902060005b8781101561107a57815484820152908601908401611061565b83019850505b5050505050505092915050565b73ffffffffffffffffffffffffffffffffffffffff83168152604060208201526080604082015260006110c360c0830184610fed565b603f19808483030160608501526110dd8260018701610fed565b9150808483030160808501526110f68260028701610fed565b9150808483030160a0850152506111108160038601610fed565b95945050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156111595761115961112f565b5060010190565b6000828210156111725761117261112f565b500390565b634e487b7160e01b600052603160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff831681526040602082015260008251608060408401526111c560c0840182610e7c565b90506020840151603f19808584030160608601526111e38383610e7c565b925060408601519150808584030160808601526112008383610e7c565b925060608601519150808584030160a08601525061121e8282610e7c565b9695505050505050565b6bffffffffffffffffffffffff198560601b16815260008451611252816014850160208901610e4c565b845190830190611269816014840160208901610e4c565b845191019061127f816014840160208801610e4c565b016014019695505050505050565b6000825161129f818460208701610e4c565b919091019291505056fea2646970667358221220182c53974106a63c3c988052d7fc68c3dc2b8b1829ebdfc7d4ecd1630925100764736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100675760003560e01c80631a8598a7116100505780631a8598a7146100aa578063c3552867146100cd578063da40fa77146100ee57600080fd5b806305562ae81461006c5780630e24c52c14610095575b600080fd5b61007f61007a366004610c7d565b610101565b60405161008c9190610c9f565b60405180910390f35b6100a86100a3366004610d86565b610178565b005b6100bd6100b8366004610e33565b6103bd565b60405161008c9493929190610ea8565b6100e06100db366004610f00565b610605565b60405190815260200161008c565b6100a86100fc366004610f2a565b610636565b73ffffffffffffffffffffffffffffffffffffffff81166000908152602081815260409182902080548351818402810184019094528084526060939283018282801561016c57602002820191906000526020600020905b815481526020019060010190808311610158575b50505050509050919050565b61018184610ab9565b156101bc5760405162461bcd60e51b8152602060048201526006602482015265434c4d30303160d01b60448201526064015b60405180910390fd5b6101c583610ab9565b156101fb5760405162461bcd60e51b815260206004820152600660248201526521a62698181960d11b60448201526064016101b3565b600061020933868686610ada565b6000818152600160205260408120805492935090916102af919061022c90610fb2565b80601f016020809104026020016040519081016040528092919081815260200182805461025890610fb2565b80156102a55780601f1061027a576101008083540402835291602001916102a5565b820191906000526020600020905b81548152906001019060200180831161028857829003601f168201915b5050505050610ab9565b600083815260016020908152604090912088519293506102d3929091890190610b7e565b50600082815260016020818152604090922087516102f993919092019190880190610b7e565b506000828152600160209081526040909120855161031f92600290920191870190610b7e565b506000828152600160209081526040909120845161034592600390920191860190610b7e565b50801561036d5733600090815260208181526040822080546001810182559083529120018290555b6000828152600160205260409081902090517f38913474ea29a22c6b686bcd567285304ab34843603996723b03f0c05e9355fc916103ad9133919061108d565b60405180910390a1505050505050565b6001602052600090815260409020805481906103d890610fb2565b80601f016020809104026020016040519081016040528092919081815260200182805461040490610fb2565b80156104515780601f1061042657610100808354040283529160200191610451565b820191906000526020600020905b81548152906001019060200180831161043457829003601f168201915b50505050509080600101805461046690610fb2565b80601f016020809104026020016040519081016040528092919081815260200182805461049290610fb2565b80156104df5780601f106104b4576101008083540402835291602001916104df565b820191906000526020600020905b8154815290600101906020018083116104c257829003601f168201915b5050505050908060020180546104f490610fb2565b80601f016020809104026020016040519081016040528092919081815260200182805461052090610fb2565b801561056d5780601f106105425761010080835404028352916020019161056d565b820191906000526020600020905b81548152906001019060200180831161055057829003601f168201915b50505050509080600301805461058290610fb2565b80601f01602080910402602001604051908101604052809291908181526020018280546105ae90610fb2565b80156105fb5780601f106105d0576101008083540402835291602001916105fb565b820191906000526020600020905b8154815290600101906020018083116105de57829003601f168201915b5050505050905084565b6000602052816000526040600020818154811061062157600080fd5b90600052602060002001600091509150505481565b61063f83610ab9565b156106755760405162461bcd60e51b8152602060048201526006602482015265434c4d30303160d01b60448201526064016101b3565b61067e82610ab9565b156106b45760405162461bcd60e51b815260206004820152600660248201526521a62698181960d11b60448201526064016101b3565b60006106c233858585610ada565b3360009081526020819052604081205491925081905b8281101561072f5733600090815260208190526040902080548591908390811061070457610704611119565b9060005260206000200154141561071d5780915061072f565b8061072781611145565b9150506106d8565b5081811015610ab15760008381526001602052604080822081516080810190925280548290829061075f90610fb2565b80601f016020809104026020016040519081016040528092919081815260200182805461078b90610fb2565b80156107d85780601f106107ad576101008083540402835291602001916107d8565b820191906000526020600020905b8154815290600101906020018083116107bb57829003601f168201915b505050505081526020016001820180546107f190610fb2565b80601f016020809104026020016040519081016040528092919081815260200182805461081d90610fb2565b801561086a5780601f1061083f5761010080835404028352916020019161086a565b820191906000526020600020905b81548152906001019060200180831161084d57829003601f168201915b5050505050815260200160028201805461088390610fb2565b80601f01602080910402602001604051908101604052809291908181526020018280546108af90610fb2565b80156108fc5780601f106108d1576101008083540402835291602001916108fc565b820191906000526020600020905b8154815290600101906020018083116108df57829003601f168201915b5050505050815260200160038201805461091590610fb2565b80601f016020809104026020016040519081016040528092919081815260200182805461094190610fb2565b801561098e5780601f106109635761010080835404028352916020019161098e565b820191906000526020600020905b81548152906001019060200180831161097157829003601f168201915b5050509190925250505060008581526001602052604081209192506109b38282610c02565b6109c1600183016000610c02565b6109cf600283016000610c02565b6109dd600383016000610c02565b50503360009081526020819052604090206109f9600185611160565b81548110610a0957610a09611119565b6000918252602080832090910154338352908290526040909120805484908110610a3557610a35611119565b60009182526020808320909101929092553381529081905260409020805480610a6057610a60611177565b600190038181906000526020600020016000905590557f288f7cec6535cec42094ddba6c823fe9dc1507b8b280861eebdf01dcbecdbba23382604051610aa792919061118d565b60405180910390a1505b505050505050565b6000610ad48260405180602001604052806000815250610b14565b92915050565b600084848484604051602001610af39493929190611228565b60408051601f19818403018152919052805160209091012095945050505050565b60008151835114610b2757506000610ad4565b81604051602001610b38919061128d565b6040516020818303038152906040528051906020012083604051602001610b5f919061128d565b6040516020818303038152906040528051906020012014905092915050565b828054610b8a90610fb2565b90600052602060002090601f016020900481019282610bac5760008555610bf2565b82601f10610bc557805160ff1916838001178555610bf2565b82800160010185558215610bf2579182015b82811115610bf2578251825591602001919060010190610bd7565b50610bfe929150610c3f565b5090565b508054610c0e90610fb2565b6000825580601f10610c1e575050565b601f016020900490600052602060002090810190610c3c9190610c3f565b50565b5b80821115610bfe5760008155600101610c40565b803573ffffffffffffffffffffffffffffffffffffffff81168114610c7857600080fd5b919050565b600060208284031215610c8f57600080fd5b610c9882610c54565b9392505050565b6020808252825182820181905260009190848201906040850190845b81811015610cd757835183529284019291840191600101610cbb565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610d0a57600080fd5b813567ffffffffffffffff80821115610d2557610d25610ce3565b604051601f8301601f19908116603f01168101908282118183101715610d4d57610d4d610ce3565b81604052838152866020858801011115610d6657600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060808587031215610d9c57600080fd5b843567ffffffffffffffff80821115610db457600080fd5b610dc088838901610cf9565b95506020870135915080821115610dd657600080fd5b610de288838901610cf9565b94506040870135915080821115610df857600080fd5b610e0488838901610cf9565b93506060870135915080821115610e1a57600080fd5b50610e2787828801610cf9565b91505092959194509250565b600060208284031215610e4557600080fd5b5035919050565b60005b83811015610e67578181015183820152602001610e4f565b83811115610e76576000848401525b50505050565b60008151808452610e94816020860160208601610e4c565b601f01601f19169290920160200192915050565b608081526000610ebb6080830187610e7c565b8281036020840152610ecd8187610e7c565b90508281036040840152610ee18186610e7c565b90508281036060840152610ef58185610e7c565b979650505050505050565b60008060408385031215610f1357600080fd5b610f1c83610c54565b946020939093013593505050565b600080600060608486031215610f3f57600080fd5b833567ffffffffffffffff80821115610f5757600080fd5b610f6387838801610cf9565b94506020860135915080821115610f7957600080fd5b610f8587838801610cf9565b93506040860135915080821115610f9b57600080fd5b50610fa886828701610cf9565b9150509250925092565b600181811c90821680610fc657607f821691505b60208210811415610fe757634e487b7160e01b600052602260045260246000fd5b50919050565b8054600090600181811c908083168061100757607f831692505b602080841082141561102957634e487b7160e01b600052602260045260246000fd5b83885260208801828015611044576001811461105557611080565b60ff19871682528282019750611080565b60008981526020902060005b8781101561107a57815484820152908601908401611061565b83019850505b5050505050505092915050565b73ffffffffffffffffffffffffffffffffffffffff83168152604060208201526080604082015260006110c360c0830184610fed565b603f19808483030160608501526110dd8260018701610fed565b9150808483030160808501526110f68260028701610fed565b9150808483030160a0850152506111108160038601610fed565b95945050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156111595761115961112f565b5060010190565b6000828210156111725761117261112f565b500390565b634e487b7160e01b600052603160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff831681526040602082015260008251608060408401526111c560c0840182610e7c565b90506020840151603f19808584030160608601526111e38383610e7c565b925060408601519150808584030160808601526112008383610e7c565b925060608601519150808584030160a08601525061121e8282610e7c565b9695505050505050565b6bffffffffffffffffffffffff198560601b16815260008451611252816014850160208901610e4c565b845190830190611269816014840160208901610e4c565b845191019061127f816014840160208801610e4c565b016014019695505050505050565b6000825161129f818460208701610e4c565b919091019291505056fea2646970667358221220182c53974106a63c3c988052d7fc68c3dc2b8b1829ebdfc7d4ecd1630925100764736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "listClaims(address)": {
        "details": "List keys of claims",
        "params": {
          "account": "account of claimer"
        },
        "returns": {
          "_0": "[[claimKeys]]"
        }
      },
      "register(string,string,string,string)": {
        "details": "Register a claim of ownership of property with evidence.",
        "params": {
          "evidence": "evidence of ownership",
          "method": "method of ownership verification",
          "propertyId": "ID of property",
          "propertyType": "type of property"
        }
      },
      "remove(string,string,string)": {
        "details": "Remove a claim of ownership.",
        "params": {
          "method": "method of ownership verification",
          "propertyId": "ID of property",
          "propertyType": "type of property"
        }
      }
    },
    "stateVariables": {
      "allClaimKeys": {
        "details": "Maps address with the claimKeys."
      },
      "allClaims": {
        "details": "Maps claimKey<uint256: hash of address, propertyType, propertyId, method> with the claim."
      }
    },
    "title": "ClaimeRegistry store claims of ownership",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 11,
        "contract": "contracts/ClaimRegistry.sol:ClaimRegistry",
        "label": "allClaimKeys",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 17,
        "contract": "contracts/ClaimRegistry.sol:ClaimRegistry",
        "label": "allClaims",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Claim)344_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_uint256,t_struct(Claim)344_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct IClaimRegistry.Claim)",
        "numberOfBytes": "32",
        "value": "t_struct(Claim)344_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Claim)344_storage": {
        "encoding": "inplace",
        "label": "struct IClaimRegistry.Claim",
        "members": [
          {
            "astId": 337,
            "contract": "contracts/ClaimRegistry.sol:ClaimRegistry",
            "label": "propertyType",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 339,
            "contract": "contracts/ClaimRegistry.sol:ClaimRegistry",
            "label": "propertyId",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 341,
            "contract": "contracts/ClaimRegistry.sol:ClaimRegistry",
            "label": "method",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 343,
            "contract": "contracts/ClaimRegistry.sol:ClaimRegistry",
            "label": "evidence",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}